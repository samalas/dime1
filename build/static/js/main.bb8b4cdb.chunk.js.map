{"version":3,"sources":["store.js","reducers/productReducers.js","types.js","reducers/cartReducers.js","reducers/orderReducers.js","components/Filter.js","actions/productActions.js","util.js","components/Products.js","actions/cartActions.js","components/Cart.js","actions/orderActions.js","screens/HomeScreen.js","components/Orders.js","screens/AdminScreen.js","App.js","index.js"],"names":["composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","size","payload","filteredItems","items","sort","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","applyMiddleware","thunk","Filter","this","props","filteredProducts","className","length","value","onChange","e","sortProducts","target","filterProducts","Component","connect","dispatch","filter","x","availableSizes","indexOf","sortedProducts","slice","a","b","_id","price","console","log","formatCurrency","num","Number","toFixed","toLocaleString","Products","openModal","product","setState","closeModal","fetchProducts","bottom","cascade","map","key","href","onClick","src","image","alt","title","addToCart","isOpen","onRequestClose","width","height","description","fetch","res","json","data","getState","alreadyExists","forEach","count","push","setItem","stringify","Cart","handleInput","name","createOrder","preventDefault","email","address","total","reduce","c","clearOrder","showCheckout","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","HomeScreen","Orders","fetchOrders","AdminScreen","App","to","style","textAlign","alignSelf","id","path","component","exact","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb8b4cdb.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { orderReducer } from \"./reducers/orderReducers\";\n\nconst initialState = {};\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    products: productsReducer,\n    cart: cartReducer,\n    order: orderReducer,\n  }),\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\nexport default store;\n","import {\n  FETCH_PRODUCTS,\n  FILTER_PRODUCTS_BY_SIZE,\n  ORDER_PRODUCTS_BY_PRICE,\n} from \"../types\";\n\nexport const productsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FILTER_PRODUCTS_BY_SIZE:\n      return {\n        ...state,\n        size: action.payload.size,\n        filteredItems: action.payload.items,\n      };\n    case ORDER_PRODUCTS_BY_PRICE:\n      return {\n        ...state,\n        sort: action.payload.sort,\n        filteredItems: action.payload.items,\n      };\n    case FETCH_PRODUCTS:\n      return { items: action.payload, filteredItems: action.payload };\n    default:\n      return state;\n  }\n};\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { cartItems: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { cartItems: action.payload.cartItems };\n    default:\n      return state;\n  }\n};\n","import { CREATE_ORDER, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\n\nconst orderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_ORDER:\n      return { order: action.payload };\n    case CLEAR_ORDER:\n      return { order: null };\n    case FETCH_ORDERS:\n      return { orders: action.payload };\n    default:\n      return state;\n  }\n};\nexport { orderReducer };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\n\nclass Filter extends Component {\n  render() {\n    return !this.props.filteredProducts ? (\n      <div>Loading...</div>\n    ) : (\n      <div className=\"filter\">\n        <div className=\"filter-result\">\n          {this.props.filteredProducts.length} Products\n        </div>\n        <div className=\"filter-sort\">\n          Order{\" \"}\n          <select\n            value={this.props.sort}\n            onChange={(e) =>\n              this.props.sortProducts(\n                this.props.filteredProducts,\n                e.target.value\n              )\n            }\n          >\n            <option value=\"latest\">Latest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"highest\">Highest</option>\n          </select>\n        </div>\n        <div className=\"filter-size\">\n          Filter{\" \"}\n          <select\n            value={this.props.size}\n            onChange={(e) =>\n              this.props.filterProducts(this.props.products, e.target.value)\n            }\n          >\n             <option value=\"\">ALL</option>\n            <option value=\"Drinks\">Drinks</option>\n            <option value=\"Snacks\">Snacks</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    size: state.products.size,\n    sort: state.products.sort,\n    products: state.products.items,\n    filteredProducts: state.products.filteredItems,\n  }),\n  {\n    filterProducts,\n    sortProducts,\n  }\n)(Filter);\n","import { FETCH_PRODUCTS } from \"../types\";\nimport { FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\nexport const fetchProducts = () => async (dispatch) => {\n  const res = await fetch(\"/api/products\");\n  const data = await res.json();\n  console.log(data);\n  dispatch({\n    type: FETCH_PRODUCTS,\n    payload: data,\n  });\n};\n\nexport const filterProducts = (products, size) => (dispatch) => {\n  dispatch({\n    type: FILTER_PRODUCTS_BY_SIZE,\n    payload: {\n      size: size,\n      items:\n        size === \"\"\n          ? products\n          : products.filter((x) => x.availableSizes.indexOf(size) >= 0),\n    },\n  });\n};\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\n  const sortedProducts = filteredProducts.slice();\n  if (sort === \"latest\") {\n    sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\n  } else {\n    sortedProducts.sort((a, b) =>\n      sort === \"lowest\"\n        ? a.price > b.price\n          ? 1\n          : -1\n        : a.price > b.price\n        ? -1\n        : 1\n    );\n  }\n  console.log(sortedProducts);\n  dispatch({\n    type: ORDER_PRODUCTS_BY_PRICE,\n    payload: {\n      sort: sort,\n      items: sortedProducts,\n    },\n  });\n};\n","export default function formatCurrency(num) {\n  return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\n}\n","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nimport Fade from \"react-reveal/Fade\";\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"../actions/productActions\";\nimport { addToCart } from \"../actions/cartActions\";\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: null,\n    };\n  }\n  componentDidMount() {\n    this.props.fetchProducts();\n  }\n  openModal = (product) => {\n    this.setState({ product });\n  };\n  closeModal = () => {\n    this.setState({ product: null });\n  };\n  render() {\n    const { product } = this.state;\n    return (\n      <div>\n        <Fade bottom cascade>\n          {!this.props.products ? (\n            <div>Loading...</div>\n          ) : (\n            <ul className=\"products\">\n              {this.props.products.map((product) => (\n                <li key={product._id}>\n                  <div className=\"product\">\n                    <a\n                      href={\"#\" + product._id}\n                      onClick={() => this.openModal(product)}\n                    >\n                      <img src={product.image} alt={product.title}></img>\n                      <p>{product.title}</p>\n                    </a>\n                    <div className=\"product-price\">\n                      <div>{formatCurrency(product.price)}</div>\n                      <button\n                        onClick={() => this.props.addToCart(product)}\n                        className=\"button primary\"\n                      >\n                        Add To Cart\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n        </Fade>\n        {product && (\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"product-details\">\n                \n                <img src={product.image} alt={product.title} width=\"25%\" height=\"25%\" ></img>\n                <div className=\"product-details-description\">\n                  <p>\n                    <strong>{product.title}</strong>\n                  </p>\n                  <p>{product.description}</p>\n                  <p>\n                    Category:{\" \"}\n                    {product.availableSizes.map((x) => (\n                      <span>\n                        {\" \"}\n                        <button className=\"button\">{x}</button>\n                      </span>\n                    ))}\n                  </p>\n                  <div className=\"product-price\">\n                    <div>{formatCurrency(product.price)}</div>\n                    <button\n                      className=\"button primary\"\n                      onClick={() => {\n                        this.props.addToCart(product);\n                        this.closeModal();\n                      }}\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({ products: state.products.filteredItems }),\n  {\n    fetchProducts,\n    addToCart,\n  }\n)(Products);\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      x.count++;\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState()\n    .cart.cartItems.slice()\n    .filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nimport Fade from \"react-reveal/Fade\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { removeFromCart } from \"../actions/cartActions\";\nimport { createOrder, clearOrder } from \"../actions/orderActions\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      showCheckout: false,\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  createOrder = (e) => {\n    e.preventDefault();\n    const order = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      cartItems: this.props.cartItems,\n      total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\n    };\n    this.props.createOrder(order);\n  };\n  closeModal = () => {\n    this.props.clearOrder();\n  };\n  render() {\n    const { cartItems, order } = this.props;\n    return (\n      <div>\n        {cartItems.length === 0 ? (\n          <div className=\"cart cart-header\">Cart is empty</div>\n        ) : (\n          <div className=\"cart cart-header\">\n            You have {cartItems.length} in the cart{\" \"}\n          </div>\n        )}\n\n        {order && (\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"order-details\">\n                <h3 className=\"success-message\">Your order has been placed. Please wait for a text on your order status. Use Venmo or Cash at the door when items arrive.</h3>\n                <h2>Order {order._id}</h2>\n                <ul>\n                  <li>\n                    <div>Name:</div>\n                    <div>{order.name}</div>\n                  </li>\n                  <li>\n                    <div>Phone Number:</div>\n                    <div>{order.email}</div>\n                  </li>\n                  <li>\n                    <div>Address:</div>\n                    <div>{order.address}</div>\n                  </li>\n                  <li>\n                    <div>Date:</div>\n                    <div>{order.createdAt}</div>\n                  </li>\n                  <li>\n                    <div>Total:</div>\n                    <div>{formatCurrency(order.total+1.5)}</div>\n                  </li>\n                  <li>\n                    <div>Cart Items:</div>\n                    <div>\n                      {order.cartItems.map((x) => (\n                        <div>\n                          {x.count} {\" x \"} {x.title}\n                        </div>\n                      ))}\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n        <div>\n          <div className=\"cart\">\n            <Fade left cascade>\n              <ul className=\"cart-items\">\n                {cartItems.map((item) => (\n                  <li key={item._id}>\n                    <div>\n                      <img src={item.image} alt={item.title}></img>\n                    </div>\n                    <div>\n                      <div>{item.title}</div>\n                      <div className=\"right\">\n                        {formatCurrency(item.price)} x {item.count}{\" \"}\n                        <button\n                          className=\"button\"\n                          onClick={() => this.props.removeFromCart(item)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </Fade>\n          </div>\n          {cartItems.length !== 0 && (\n            <div>\n              <div className=\"cart\">\n                <div className=\"total\">\n                  <div>\n                  <img src=\"https://img.icons8.com/metro/20/000000/delivery.png\"/> Fee +\n                    Total:{\" \"}\n                    {formatCurrency(\n                      cartItems.reduce((a, c) => (a + c.price * c.count), 1.5)\n                    )}\n                  </div>\n                  <button\n                    onClick={() => {\n                      this.setState({ showCheckout: true });\n                    }}\n                    className=\"button primary\"\n                  >\n                    Proceed\n                  </button>\n                </div>\n              </div>\n              {this.state.showCheckout && (\n                <Fade right cascade>\n                  <div className=\"cart\">\n                    <form onSubmit={this.createOrder}>\n                      <ul className=\"form-container\">\n                        <li>\n                          <label>Phone Number</label>\n                          <input\n                            name=\"email\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Name</label>\n                          <input\n                            name=\"name\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Address (including Apt #)</label>\n                          <input\n                            name=\"address\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <button className=\"button primary\" type=\"submit\">\n                            Checkout\n                          </button>\n                        </li>\n                      </ul>\n                    </form>\n                  </div>\n                </Fade>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    order: state.order.order,\n    cartItems: state.cart.cartItems,\n  }),\n  { removeFromCart, createOrder, clearOrder }\n)(Cart);\n","import { CREATE_ORDER, CLEAR_CART, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\n\nexport const createOrder = (order) => (dispatch) => {\n  fetch(\"/api/orders\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(order),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({ type: CREATE_ORDER, payload: data });\n      localStorage.clear(\"cartItems\");\n      dispatch({ type: CLEAR_CART });\n    });\n};\nexport const clearOrder = () => (dispatch) => {\n  dispatch({ type: CLEAR_ORDER });\n};\nexport const fetchOrders = () => (dispatch) => {\n  fetch(\"/api/orders\")\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({ type: FETCH_ORDERS, payload: data });\n    });\n};\n","import React, { Component } from \"react\";\nimport Filter from \"../components/Filter\";\nimport Products from \"../components/Products\";\nimport Cart from \"../components/Cart\";\n\nexport default class HomeScreen extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"content\">\n          <div className=\"main\">\n            <Filter></Filter>\n            <Products></Products>\n          </div>\n          <div className=\"sidebar\">\n            <Cart />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../actions/orderActions\";\nimport formatCurrency from \"../util\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n  render() {\n    const { orders } = this.props;\n    return !orders ? (\n      <div>Orders</div>\n    ) : (\n      <div className=\"orders\">\n        <h2>Orders</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADDRESS</th>\n              <th>ITEMS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr>\n                <td>{order._id}</td>\n                <td>{order.createdAt}</td>\n                <td> {formatCurrency(order.total)}</td>\n                <td>{order.name}</td>\n                <td>{order.email}</td>\n                <td>{order.address}</td>\n                <td>\n                  {order.cartItems.map((item) => (\n                    <div>\n                      {item.count} {\" x \"} {item.title}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    orders: state.order.orders,\n  }),\n  {\n    fetchOrders,\n  }\n)(Orders);\n","import React, { Component } from \"react\";\nimport Orders from \"../components/Orders\";\n\nexport default class AdminScreen extends Component {\n  render() {\n    return (\n      <div>\n        <Orders />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AdminScreen from \"./screens/AdminScreen\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"grid-container\">\n            \n            <header >\n              <Link to=\"/\">DimePac - Store&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Link>\n              <br></br>\n              <header style={{ textAlign: 'right', alignSelf: 'stretch'}}>\n              <a href=\"#bottom\" id=\"scroll-to-bottom\">Checkout</a>\n              </header>\n            </header>\n            \n            <main>\n              <Route path=\"/admin\" component={AdminScreen} />\n              <Route path=\"/\" component={HomeScreen} exact />\n            </main>\n            <footer id=\"bottom\">Copyright ©2020 DimePac. All rights reserved</footer>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}